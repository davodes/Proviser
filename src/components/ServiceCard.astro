---
export interface Props {
  title: string;
  description: string;
  icon: string;
  link: string;
  features: string[];
}

const { title, description, icon, link, features } = Astro.props;
---

<div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
  <div class="p-8">
    <div class="bg-primary-100 w-16 h-16 rounded-lg flex items-center justify-center mb-6 group-hover:bg-primary-200 transition-colors">
      <Fragment set:html={icon} />
    </div>
    
    <h3 class="text-xl font-bold text-gray-900 mb-4">{title}</h3>
    <p class="text-gray-600 mb-6 leading-relaxed">{description}</p>
    
    <ul class="space-y-2 mb-6">
      {features.map((feature) => (
        <li class="flex items-center text-sm text-gray-600">
          <svg class="w-4 h-4 text-success-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
          </svg>
          {feature}
        </li>
      ))}
    </ul>
    
    <a 
      href={link}
      class="inline-flex items-center text-primary-600 font-semibold hover:text-primary-700 transition-colors group"
    >
      Más información
      <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
  </div>
</div>